!!!
%html
  %head
    %title= ['Trust Master', page_title].compact.join(': ')

    = stylesheet_link_tag :application
    /[if IE]
      = stylesheet_link_tag :ie
    /[if IE 8]
      = stylesheet_link_tag :ie8
    /[if lte IE 7]
      = stylesheet_link_tag :ie7

    - unless controller.controller_name == 'pages'
      = javascript_include_tag :loader

    = content_for :head

  %body
    #wrapper
      %header#header
        %h1#site-logo
          = link_to root_url do
            = image_tag 'logo.png', title: "Trust Master: #{t(:tagline)}", alt: "Trust Master"
        - if current_user
          %nav#user-nav
            = nav_for :account_links, menu_class: 'account-links', item_wrapper: nil do |menu|
              - if current_user.company_id?
                %li#user-nav-profile.dropdown
                  = menu.nav_link :profile, company_path(current_user.company), proc { current_user.company_id == @company.try(:id) }
                  = menu.nav_for :profile do |profile|
                    = profile.nav_link :show, company_path(current_user.company)
                    - if can?(:edit, current_user.company)
                      = profile.nav_link :edit, edit_company_path(current_user.company, section: :identity)
              %li#user-nav-account.dropdown
                = menu.nav_link :account, edit_account_path(section: :basic), proc { controller.controller_name == 'accounts' }
                = menu.nav_for :account do |account|
                  = account.nav_link :basic,         edit_account_path(section: :basic)
                  = account.nav_link :privacy,       edit_account_path(section: :privacy), nil, class: :disabled
                  = account.nav_link :notifications, edit_account_path(section: :notifications), nil, class: :disabled
              %li#user-nav-logout
                = menu.nav_link :logout, logout_path

            #welcome= t(:welcome, name: current_user.first_name)
          #header-search
            = form_tag(search_index_path, method: :get)  do
              %fieldset
                -# REFACTOR: This should utilize simpleform and a model-backed set-up. How to set that up without creating a new search model instance with every request? Caching the instance?
                %input{type: :search, name: 'search[any_text_field_contains]', placeholder: 'Search', value: params['search'].try(:[], 'any_text_field_contains')}
        - else
          #user-nav-spacer

        %nav#main-nav
          = nav_for :main do |main|
            - if current_user.is_a? Administrator
              = main.nav_link :admin, admin_dashboard_path
            = main.nav_page_link :code_of_conduct
            = main.nav_page_link :core_values
            - if current_user
              = main.nav_link :search_ppn, search_index_path, proc { controller.controller_name == 'search' }
            - else
              = main.nav_link :login, login_path
        .clear

      #content{class: [content_for(:content_div_class).presence || 'col-2', page_class] }

        - flash.each do |bucket, messages|
          - Array.wrap(messages).each do |msg|
            .flash{ class: bucket }= msg

        - if content_for?(:page_title)
          %h2#page-title= page_title

        = content_for?(:content) ? yield(:content) : yield

        .clear
      %footer#footer
        #footer-links
          = nav_for :footer do |footer|
            - [:terms, :privacy_policy, :about, :contact].each do |page_id|
              = footer.nav_page_link page_id

        #social-media
          %h5= t(:follow_us_on)
          %ul
            %li.twitter=  link_to 'Twitter',  follow_us_on_twitter_path
            %li.facebook= link_to 'Facebook', follow_us_on_facebook_path

        #trust-logos
          = image_tag 'trust-logos.png', alt: 'Verisign', width: 128, height: 47

    #copyright &copy; #{Time.now.year} #{t('copyright')}



    / = javascript_include_tag :application
